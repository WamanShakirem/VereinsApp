// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VereinsApp.Models;

#nullable disable

namespace VereinsApp.Migrations
{
    [DbContext(typeof(VereinsKontext))]
    [Migration("20230412171300_bezahlt")]
    partial class bezahlt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VereinsApp.Models.Mitglied", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Beitrittsdatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Bezahlmethode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Bezahlt")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Geburtsdatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Geschlecht")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mitgliedschaftskategorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notiz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Plz")
                        .HasColumnType("int");

                    b.Property<string>("Telefonnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mitglieder");
                });

            modelBuilder.Entity("VereinsApp.Models.Rechnung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Betrag")
                        .HasColumnType("float");

                    b.Property<DateTime>("Bezahldatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("MitgliedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MitgliedId");

                    b.ToTable("Rechnungen");
                });

            modelBuilder.Entity("VereinsApp.Models.Rechnung", b =>
                {
                    b.HasOne("VereinsApp.Models.Mitglied", "Mitglied")
                        .WithMany("RechnungListe")
                        .HasForeignKey("MitgliedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mitglied");
                });

            modelBuilder.Entity("VereinsApp.Models.Mitglied", b =>
                {
                    b.Navigation("RechnungListe");
                });
#pragma warning restore 612, 618
        }
    }
}
